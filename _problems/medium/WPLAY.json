{"category_name":"medium","status":"success","problem_code":"WPLAY","problem_name":"Word Play","body":"<span class=\"solution-visible-txt\">All submissions for this problem are available.<\/span><p>\n<b>Alice<\/b> and <b>Bob<\/b> decide to play the game <b>\"CCWordPlay\"<\/b>.<br \/>\n<b>CCWordPlay<\/b> is played as follows:<br \/>\n<br \/>\nInitially, there is a <b>r * c<\/b> grid of <b>uppercase English alphabets<\/b>, where <b>r<\/b> denotes the number of rows, and <b>c<\/b> denotes the number of columns.<br \/>\nIn the player's turn, this player should make a <b>valid dictionary word<\/b> using the<br \/>\n<b>active<\/b> alphabets on the board. Initially all the alphabets on the board are active.<br \/>\nIf a player is unable to make any such word, then the player lost the game. If a player makes a word, then all the alphabets used to make the word should be considered inactive till the end of the game. The turns of players alternate, until one of them loses. As usual <b>Alice plays first<\/b>.<br \/>\n<br\/><br \/>\nYou are to say, if both <b>Alice<\/b> and <b>Bob<\/b> play optimally, who will win the game?\n<\/br\/><\/p>\n<p><b>Note 1:<\/b><\/p>\n<p>\nThe alphabets need not be adjacent in any way.<\/p>\n<pre style=\"font-family:monospace\">\nIBC\nDEF\nAJN\n<\/pre><p>\nIn the above configuration, <b>\"CAN\"<\/b>, is a valid word.\n<\/p>\n<p><b>Note 2:<\/b><\/p>\n<p>\nConsider a <b>2 * 2<\/b> of the grid<\/p>\n<pre style=\"font-family:monospace\">\nBE\nED\n<\/pre><p>\nLet the dictionary be:<\/p>\n<pre style=\"font-family:monospace\">\nBED\nBEE\n<\/pre><p>\nSay a player made the word <b>\"BED\"<\/b>. This word can be make in two ways:<\/p>\n<pre style=\"font-family:monospace\">\n--\nE-\n\nor\n\n-E\n--\n<\/pre><p>\nNote that after making <b>\"BED\"<\/b>, not all the <b>E<\/b>(s) are inactive. However, after <b>\"BEE\"<\/b> is created, both <b>E<\/b>s are inactive, namely the board will be<\/p>\n<pre style=\"font-family:monospace\">\n--\n-D\n<\/pre>\n<h3>Input<\/h3>\n<p>\nThe first line of input contains <b>D<\/b> denoting the number of words in the dictionally.<br \/>\nThe next <b>D<\/b> lines contain words in the dictionally.<br \/>\nThen the next line contains 2 space-separated integers denoting <b>r<\/b> and <b>c<\/b>.<br \/>\nAfter that, the next line contains an integers <b>T<\/b> denoting the number of boards.<br \/>\nThen the <b>T<\/b> boards are follow without any extra spaces and extra blank lines.\n<\/p>\n<h3>Output<\/h3>\n<p>\nFor each board, print a single line containing,<br \/>\n<b>\"Alice\"<\/b>, if Alice wins, or <b>\"Bob\"<\/b>, if Bob wins. (Quotes are only for clarity).\n<\/p>\n<h3>Constraints<\/h3>\n<p>\n1 \u2264 <b>D<\/b> \u2264 500000<br \/><br \/>\n1 \u2264 <b>T<\/b> \u2264 1000<br \/><br \/>\n1 \u2264 <b>r<\/b>, <b>c<\/b> \u2264 4<br \/><br \/>\n1 \u2264 The length of each word \u2264 <b>r<\/b> * <b>c<\/b><br \/><br \/>\nThe dictionary does not contain the same word more than once.<br \/><br \/>\nAt least one of the following 3 conditions must be hold:<\/p>\n<ul>\n<li><b>r<\/b> = 4, <b>c<\/b> = 4, <b>T<\/b> \u2264 10<\/li>\n<li><b>r<\/b> = 3, <b>c<\/b> = 4, <b>T<\/b> \u2264 100<\/li>\n<li><b>r<\/b> \u2264 3, <b>c<\/b> \u2264 3, <b>T<\/b> \u2264 1000<\/li>\n<\/ul>\n\n<h3>Samples<\/h3>\n<pre>\n<b>Input:<\/b>\n5\nBED\nBAD\nRED\nBREED\nBEER\n3 3\n2\nDER\nRAD\nFEE\nBAR\nBEE\nRAN\n\n<b>Output:<\/b>\nBob\nAlice\n\n<\/pre>","languages_supported":"ADA, ASM, BASH, BF, C, C99 strict, CAML, CLOJ, CLPS, CPP 4.3.2, CPP 4.9.2, CPP14, CS2, D, ERL, FORT, FS, GO, HASK, ICK, ICON, JAVA, JS, LISP clisp, LISP sbcl, LUA, NEM, NICE, NODEJS, PAS fpc, PAS gpc, PERL, PERL6, PHP, PIKE, PRLG, PYTH, PYTH 3.4, RUBY, SCALA, SCM guile, SCM qobi, ST, TCL, TEXT, WSPC","max_timelimit":"4","source_sizelimit":"50000","problem_author":"kaushik_iska","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #1E7D22;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>2&#9733;<\/span><span>kaushik_iska<\/span>","problem_tester":"laycurse","problem_tester_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span>laycurse<\/span>","date_added":"1-01-2013","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/easy'>\n                    easy\n                <\/a><a class='problem-tag-small ' href='\/tags\/problems\/feb13'>\n                    feb13\n                <\/a><a class='problem-tag-small ' href='\/tags\/problems\/game'>\n                    game\n                <\/a><a class='problem-tag-small ' href='\/tags\/problems\/kaushik_iska'>\n                    kaushik_iska\n                <\/a>","editorial_url":"http:\/\/discuss.codechef.com\/problems\/WPLAY","user":{"username":null},"time":{"view_start_date":1360583729,"submit_start_date":1360583729,"visible_start_date":1360582602,"end_date":1735669800,"current":1493557955},"todo":false,"problem_status":"unattempted"}