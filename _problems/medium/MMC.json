
{"category_name":"medium","status":"success","problem_code":"MMC","problem_name":"Mouse Meets Cheese","body":"<span class=\"solution-visible-txt\">All submissions for this problem are available.<\/span>###Read problems statements [Mandarin](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/mandarin\/MMC.pdf) , [Bengali](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/bengali\/MMC.pdf) , [Hindi](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/hindi\/MMC.pdf) , [Russian](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/russian\/MMC.pdf) and [Vietnamese](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/vietnamese\/MMC.pdf) as well.\n\nArya has a pet mouse named Jack. She put Jack in a grid with $N$ rows (numbered $1$ through $N$) and $M$ columns (numbered $1$ through $M$). There are $K$ cheese wedges scattered over the grid; for each wedge, we know how long it takes Jack to eat it.\n\nLet's denote the cell in row $r$ and column $c$ by $(r, c)$. Initially, Jack is in the cell $(1, 1)$. When Jack is in a cell $(r, c)$, he can move to either of the cells $(r, c-1)$ or $(r, c+1)$ in $1$ second. If he is in the first or last column of the grid ($c=1$ or $c=M$), he can also move to the cell $(r+1, c)$ in $1$ second. Jack can only eat a cheese wedge if he is in the same cell as the wedge.\n\nYour task is to help Jack find out, for each possible $i$, the minimum number of seconds Jack needs to eat $i$ cheese wedges.\n\n### Input\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains three space-separated integers $N$, $M$ and $K$.\n- $K$ lines follow. Each of these lines contains three space-separated integers $r$, $c$ and $t$, denoting that there is a cheese wedge in cell $(r, c)$ and it takes Jack $t$ seconds to eat it.\n\n### Output\nFor each test case, print a single line containing $K$ space-separated integers. For each $i$ ($1 \\le i \\le K$), the $i$-th of them should denote the minimum number of seconds Jack needs to eat $i$ cheese wedges.\n\n### Constraints \n- $1 \\le T \\le 1,000$\n- $3 \\le N, M \\le 10^9$\n- $1 \\le K \\le 10^4$\n- $1 \\le r \\le N$\n- $2 \\le c \\le M-1$\n- $1 \\le t \\le 10^9$\n- no two cheese wedges are in the same cell\n- the sum of $K$ over all test cases does not exceed $10^4$\n\n### Subtasks\n**Subtask #1 (25 points):**\n- $1 \\le T \\le 10$\n- $ N, M, K \\le 300$\n\n**Subtask #2 (75 points):** original constraints\n\n### Example Input\n```\n1\n3 10 5\n1 2 10\n2 2 1\n1 3 1\n1 9 1 \n2 9 1\n```\n\n### Example Output\n```\n3 8 14 22 32\n```\n","languages_supported":"C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, PYP3, CLOJ, COB, FS","max_timelimit":"3","source_sizelimit":"50000","problem_author":"watcher","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span>watcher<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"22-01-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime68'>ltime68<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/watcher'>watcher<\/a>","editorial_url":"https:\/\/discuss.codechef.com\/problems\/MMC","time":{"view_start_date":1548522002,"submit_start_date":1548522002,"visible_start_date":1548522002,"end_date":1735669800,"current":1559472978},"user":{"username":"","access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false}