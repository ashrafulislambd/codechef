
{"category_name":"medium","status":"success","problem_code":"CHEFOFR","problem_name":"Offer for Chef","body":"<span class=\"solution-visible-txt\">All submissions for this problem are available.<\/span>### Read problem statements in [Hindi](http:\/\/www.codechef.com\/download\/translated\/APRIL19\/hindi\/CHEFOFR.pdf), [Bengali](http:\/\/www.codechef.com\/download\/translated\/APRIL19\/bengali\/CHEFOFR.pdf), [Mandarin Chinese](http:\/\/www.codechef.com\/download\/translated\/APRIL19\/mandarin\/CHEFOFR.pdf), [Russian](http:\/\/www.codechef.com\/download\/translated\/APRIL19\/russian\/CHEFOFR.pdf), and [Vietnamese](http:\/\/www.codechef.com\/download\/translated\/APRIL19\/vietnamese\/CHEFOFR.pdf) as well.\n\nChef is very happy today because he got an offer from Gordon Ramsay himself to work for him in London. Chef wants to prepare a delicious cake for Gordon to impress him, but he does not know that Gordon Ramsay is not easy to impress.\n\nGordon cut Chef's cake into $N$ small slices (numbered $1$ through $N$), placed in a row in such a way that for each valid $i$, slices $i$ and $i+1$ are adjacent. Note that slices $N$ and $1$ are **not** adjacent. For each valid $i$, the $i$-th slice has *taste* $A_i$. Gordon wants to put special toppings on some slices and then ask Chef to group all slices into $K$ clusters in such a way that the slices in each cluster form a contiguous sequence and the *sweetness* of the cake is maximum possible.\n\nFor each valid $i$, let's denote the topping on the $i$-th slice by $t_i$ ($t_i = 0$ if there is no topping on this slice); the *sweetness* of this slice is $t_i \\cdot A_i$, so the sweetness of a slice without any special topping is $0$.\n\nThe sweetness of a cluster is the total (summed up) sweetness of all slices in this cluster. Let's denote the sweetnesses of all clusters by $S_1, S_2, \\ldots, S_K$. The sweetness of the whole cake is computed as $S_1 * S_2 * \\ldots * S_K$, where the operation $*$ is defined in the following way: for any non-negative integers $x$ and $y$ such that $x \\ge y$,\n$$x * y = y * x = \\sum_{n=0}^{\\lfloor\\log_2(x)\\rfloor} 2^n\\left(\\left\\lfloor\\frac{x}{2^n}\\right\\rfloor \\bmod 2\\right)\\left(\\left\\lfloor\\frac{y}{2^n}\\right\\rfloor \\bmod 2\\right) \\,.$$\nIt can be proven that this operation is associative, i.e. $(x * y) * z = x * (y * z)$.\n\nYou should answer $Q$ queries. In each query, you are given the toppings on all slices and the number of clusters $K$. Tell Chef the maximum possible sweetness of the cake!\n\n### Input\n- The first line of the input contains a single integer $N$.\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\n- The next line contains a single integer $Q$.\n- For each query, two lines follow. The first of these lines contains a single integer $K$. The second line contains $N$ space-separated integers $t_1, t_2, \\ldots, t_N$.\n\n### Output\nPrint a single line containing one integer \u2014 the maximum sweetness.\n\n### Constraints\n- $1 \\le Q \\le 10$\n- $1 \\le N \\le 10^5$\n- $1 \\le K \\le 10^5$\n- $1 \\le A_i \\le 10^{15}$ for each valid $i$\n- $0 \\le t_i \\le 10$ for each valid $i$\n- in each query, the number of slices with toppings does not exceed $50$\n\n### Subtasks\n**Subtask #1 (100 points):** original constraints\n\n### Example Input\n```\n10\n15 5 26 4 3 13 5 5 27 11\n2\n3\n2 3 1 4 7 1 5 1 1 1\n1\n0 0 0 0 0 0 0 1 0 0\n```\n\n### Example Output\n```\n33\n5\n```\n\n### Explanation\nFor the first query, Chef can choose clusters in the following way: cluster $1$ contains slices $1$ and $2$, cluster $2$ contains slices $3$ through $7$ and cluster $3$ contains slices $8$ through $10$. The sweetness of the cake is $(15 \\cdot 2 + 5 \\cdot 3) * (26 \\cdot 1 + 4 \\cdot 4 + 3 \\cdot 7 + 13 \\cdot 1 + 5 \\cdot 5) * (5 \\cdot 1 + 27 \\cdot 1 + 11 \\cdot 1) = 33$.\n","languages_supported":"C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, PYP3, CLOJ, R, COB, FS","max_timelimit":"1","source_sizelimit":"50000","problem_author":"utkarsh97","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FFBF00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>5&#9733;<\/span><span>utkarsh97<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"23-01-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/april19'>april19<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/binary-search'>binary-search<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/bitmasking'>bitmasking<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/bitwise'>bitwise<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/medium'>medium<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/utkarsh97'>utkarsh97<\/a>","editorial_url":"https:\/\/discuss.codechef.com\/problems\/CHEFOFR","time":{"view_start_date":1555320602,"submit_start_date":1555320602,"visible_start_date":1555320602,"end_date":1735669800,"current":1559472970},"user":{"username":"","access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false}