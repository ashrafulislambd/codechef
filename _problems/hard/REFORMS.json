
{"category_name":"hard","status":"success","problem_code":"REFORMS","problem_name":"Reforms, Reforms Never Change","body":"<span class=\"solution-visible-txt\">All submissions for this problem are available.<\/span>The king of Berland wants to revise his road system. Again.\n\nThis time the kingdom of Berland consists of $n$ cities and $m$ one-way roads. The cities are numbered from 1 to $n$. Each road allows to travel from some city to some other city. It is not possible to travel the road in opposite direction.\n\nThe king plans to stimulate a migration in his country, so he plans to change the direction of some roads in such a way that there exists a path from city $1$ to city $n$.  Due to complicated legislation he is only allowed to perform operations of two types.\n\n* Pick some city $v$. Consider all cities $u$ such that there exists a road between $v$ and $u$ (direction doesn't matter) and change its direction to lead from city $v$ to city $u$. In other words, all roads incident to city $v$ become outgoing.\n* Pick some city $v$. Consider all cities $u$ such that there exists a road between $v$ and $u$ (direction doesn't matter) and change its direction to lead from city $u$ to city $v$. In other words, all roads incident to city $v$ become incoming.\n\nThe king is a very busy man so he wants to minimize the total number of actions he has to perform, so that at the end, there will be a directed path from $1$ to $n$. Help the king by computing this value for him, or determine that there is no solution.\n\n###Input:\n- The first line of the input contains a single integer $t$ - the number of test cases in this input. Then follow $t$ descriptions of individual test cases.\n- The first line of each test case description starts with two integers $n$ and $m$, denoting the number of cities and the number of roads in the kingdom of Berland. \n- Then follow $m$ lines, the $i$-th line containing integers $u_i$ and $v_i$ , meaning that there is a road between cities $u_i$ and $v_i$ that is currently directed from $u_i$ to $v_i$. \n\n###Output:\n- For each testcase, output a single line which should contain a single integer equal to the minimum number of actions the king needs to take in order to create a directed path from city $1$ to city $n$. \n- If there is no solution for some of test cases, the answer for such test cases should be $-1$.\n\n###Constraints \n- $1 \\leq t \\leq 1000$\n- $2 \\leq n \\leq 500\\,000$ \n- $0 \\leq m \\leq 1\\,000\\,000$\n- $1 \\leq u_i, v_i \\leq n$ \n- $u_i \\ne v_i$\n- It is guaranteed that there is no more than one road (whatever direction) between each pair of cities.\n- It is guaranteed that *the total number of cities* in all test cases doesn't exceed $500\\,000$ and *the total number of roads* in all test cases doesn't exceed $1\\,000\\,000$.\n\n###Sample Input:\n\t2\n\t2 0\n\t5 6\n\t2 1\n\t1 3\n\t2 3\n\t3 4\n\t2 5\n\t5 4\n\n###Sample Output:\n\t-1\n\t1\n\t\n###EXPLANATION:\nThe sample input consists of two test cases.\n\nIn the first test case, there are no roads at all, so the answer is $-1$.\n\nIn the second test case, the king can pick the $5$-th city and change the direction of all roads incident to this city (these are roads $2-5$ and $4-5$) to point to city $5$. Thus, the answer is $1$.","languages_supported":"C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, PYP3, CLOJ, COB, FS","max_timelimit":"3","source_sizelimit":"50000","problem_author":"balajiganapath","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #FF7F00;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>6&#9733;<\/span><span>balajiganapath<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"25-12-2018","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/balajiganapath'>balajiganapath<\/a>","time":{"view_start_date":1546074900,"submit_start_date":1546074900,"visible_start_date":1546074900,"end_date":1735669800,"current":1559472992},"user":{"username":"","access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false}