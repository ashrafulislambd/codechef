
{"category_name":"easy","status":"success","problem_code":"WNDR","problem_name":"Wanderer","body":"<span class=\"solution-visible-txt\">All submissions for this problem are available.<\/span>###Read problems statements [Mandarin](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/mandarin\/WNDR.pdf) , [Bengali](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/bengali\/WNDR.pdf) , [Hindi](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/hindi\/WNDR.pdf) , [Russian](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/russian\/WNDR.pdf) and [Vietnamese](http:\/\/www.codechef.com\/download\/translated\/LTIME68\/vietnamese\/WNDR.pdf) as well.\n\nNadaca is a country with $N$ cities. These cities are numbered $1$ through $N$ and connected by $M$ bidirectional roads. Each city can be reached from every other city using these roads.\n\nInitially, Ryan is in city $1$. At each of the following $K$ seconds, he may move from his current city to an adjacent city (a city connected by a road to his current city) or stay at his current city. Ryan also has $Q$ conditions $(a_1, b_1), (a_2, b_2), \\ldots, (a_Q, b_Q)$ meaning that during this $K$-second trip, for each valid $i$, he wants to be in city $a_i$ after exactly $b_i$ seconds.\n\nSince you are very good with directions, Ryan asked you to tell him how many different trips he could make while satisfying all conditions. Compute this number modulo $10^9 + 7$. A trip is a sequence of Ryan's current cities after $1, 2, \\ldots, K$ seconds.\n\n### Input\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains three space-separated integers $N$, $M$ and $K$.\n- Each of the next $M$ lines contains two space-separated integers $u$ and $v$ denoting a road between cities $u$ and $v$.\n- The next line contains a single integer $Q$.\n- $Q$ lines follow. For each $i$ ($1 \\le i \\le Q$), the $i$-th of these lines contains two space-separated integers $a_i$ and $b_i$.\n\n### Output\nFor each test case, print a single line containing one integer \u2014 the number of trips Ryan can make, modulo $10^9+7$.\n\n### Constraints\n- $1 \\le T \\le 50$\n- $1 \\le N, M, K, Q \\le 9,000$\n- $1 \\le u_i, v_i \\le N$ for each valid $i$\n- $u_i \\neq v_i$ for each valid $i$\n- there is at most one road between each pair of cities\n- each city is reachable from every other city\n- $1 \\le a_i \\le N$ for each valid $i$\n- $0 \\le b_i \\le K$ for each valid $i$\n- the sum of $N$ over all test cases does not exceed $9,000$\n- the sum of $K$ over all test cases does not exceed $9,000$\n- the sum of $M$ over all test cases does not exceed $9,000$\n- the sum of $Q$ over all test cases does not exceed $9,000$\n\n### Subtasks\n**Subtask #1 (20 points):**\n- the sum of $N$ over all test cases does not exceed $400$\n- the sum of $K$ over all test cases does not exceed $400$\n- the sum of $M$ over all test cases does not exceed $400$\n- the sum of $Q$ over all test cases does not exceed $400$\n\n**Subtask #2 (80 points):** original constraints\n\n### Example Input\n```\n3\n4 3 3\n1 2\n1 3\n1 4\n0\n4 3 3\n1 2\n1 3\n1 4\n1\n2 2\n4 3 3\n1 2\n1 3\n1 4\n1\n2 1\n```\n\n### Example Output\n```\n28\n4\n6\n```\n","languages_supported":"C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, PYP3, CLOJ, COB, FS","max_timelimit":"2","source_sizelimit":"50000","problem_author":"watcher","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #D0011B;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>7&#9733;<\/span><span>watcher<\/span>","problem_tester":null,"problem_tester_html_handle":null,"date_added":"20-01-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/dynamic-programming'>dynamic-programming<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/graphs'>graphs<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/ltime68'>ltime68<\/a>, <a class='problem-tag-small ' href='\/tags\/problems\/watcher'>watcher<\/a>","editorial_url":"https:\/\/discuss.codechef.com\/problems\/WNDR","time":{"view_start_date":1548522002,"submit_start_date":1548522002,"visible_start_date":1548522002,"end_date":1735669800,"current":1559472963},"user":{"username":"","access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false}