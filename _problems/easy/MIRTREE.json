
{"category_name":"easy","status":"success","problem_code":"MIRTREE","problem_name":"Weirwood Trees","body":"<span class=\"solution-visible-txt\">All submissions for this problem are available.<\/span>Given a Complete Binary Tree of \u2018n\u2019 depth, you can perform 4 types of mirror operation on the tree:-   \nMirror on the right. The tree is mirrored to the right and rightmost node on every level is connected with the mirrored corresponding node.   \nMirror on the left. The tree is mirrored to the left and leftmost node on every level is connected with the mirrored corresponding node.    \nMirror on the top. The tree is mirrored to the top and topmost nodes are connected with corresponding nodes.    \nMirror on the bottom. The tree is mirrored to the bottom and bottom most nodes are connected with the corresponding nodes.    \nSee the image for details.   \n\nMirror Right:  \n\n<img src=\"https:\/\/codechef_shared.s3.amazonaws.com\/download\/HYC\/External_contest_images\/ALKH2019\/MIRTREE\/Mirror%20Right.jpg\" alt=\"Mirror Left\" width=\"400\"\/>\n\nMirror Bottom:   \n\n<img src=\"https:\/\/codechef_shared.s3.amazonaws.com\/download\/HYC\/External_contest_images\/ALKH2019\/MIRTREE\/Mirror%20Bottom.jpg\" alt=\"Mirror Bottom\" width=\"400\"\/>\n  \nYou are given \u2018q\u2019 queries, each performing this type of operation or asking for the no of edges in the produced graph.   \nQueries are of the form \u201c1 x\u201d or \u201c2\u201d where x is 1 for right, 2 for left, 3 for top or 4 for bottom.    \n1 x:  Perform x operation on the result graph.    \n2:     Print the no of edges in the graph. Since it can be very large, print it modulo 1000000007.   \n\n###Input:\n\n- First line will contain $n$, the depth of the initial tree and $q$, the number of queries.    \n-  Next $q$ lines contain queries of the form \"1 $x$\" or \"2\".\n\n###Output:\nFor each query of type \"2\", output a single line containing the no of edges in the graph modulo 1000000007.\n\n\n###Constraints \n- $1 \\leq n \\leq 1000$\n- $1 \\leq q \\leq 10^5$\n- $1 \\leq x \\leq 4$\n\n###Sample Input:\n\t2 3\n\t1 1\n\t1 4\n\t2\n\n\n###Sample Output:\n\t38\n\t\n###EXPLANATION:\nInitial no of edges = 6   \nAfter the operation 1 1, no of edges = 15   \nAfter the operation 1 4, no of edges = 38   \nAt operation 2, we print the no of edges that is 38.   \n","languages_supported":"C, CPP14, JAVA, PYTH, PYTH 3.6, PYPY, CS2, PAS fpc, PAS gpc, RUBY, PHP, GO, NODEJS, HASK, rust, SCALA, swift, D, PERL, FORT, WSPC, ADA, CAML, ICK, BF, ASM, CLPS, PRLG, ICON, SCM qobi, PIKE, ST, NICE, LUA, BASH, NEM, LISP sbcl, LISP clisp, SCM guile, JS, ERL, TCL, kotlin, PERL6, TEXT, SCM chicken, PYP3, CLOJ, R, COB, FS","max_timelimit":"1","source_sizelimit":"50000","problem_author":"aashu_k","problem_author_html_handle":"<span \n            class='rating' \n            style='display: inline-block; \n                    font-size: 10px; \n                    background: #684273;\n                    padding: 0 3px; \n                    line-height: 1.3; \n                    color: white;\n                    margin-right: 2px;'>4&#9733;<\/span><span>aashu_k<\/span>","problem_tester":null,"problem_tester_html_handle":"","date_added":"4-04-2019","tags":"<a class='problem-tag-small ' href='\/tags\/problems\/aashu_k'>aashu_k<\/a>","time":{"view_start_date":1554669000,"submit_start_date":1554669000,"visible_start_date":1554669000,"end_date":1735669800,"current":1559472952},"user":{"username":"","access":"default"},"todo":false,"problem_status":"unattempted","is_direct_submittable":false}