{"body":"\n<h3> All submissions for this problem are available. <\/h3><p>Chef Ash and Chef Elsh invented a new hash function! Their hash function will map a binary string consisting of characters 'A' and 'E' into an integer called the hash value of the string.<\/p>\n\n<p>The pseudocode of the hash function is as below. hash(S) is the hash value of a binary string S. |S| denotes the length of S.<\/p>\n<p>\n<pre>function hash(S):\n\tresult = number of characters 'A' in S\n\tif |S| &gt; 1:\n\t\t(S1, S2) = split(S)\n\t\tresult = result + max(hash(S1), hash(S2))\n\tend if\n\treturn result\nend function<\/pre>\n<\/p>\n\n<p>The function split in the above pseudocode takes a binary string S as the parameter and returns a pair of binary strings (S1, S2) such that:<\/p>\n<p>\n<ul>\n<li>|S1| &lt;= |S2|.<\/li>\n<li>The difference of |S1| and |S2| is at most 1.<\/li>\n<li>The concatenation of S1 and S2 (in that order) is S.<\/li>\n<\/ul>\n<\/p>\n<p>For example, split(\"AAAEE\") returns (\"AA\", \"AEE\"), whereas split(\"AEAEAE\") returns (\"AEA\", \"EAE\").<\/p>\n\n<p>You doubt that this hash function have good distribution of different hash values. So, you wonder how many different binary strings consisting of A 'A' characters and E 'E' characters that have hash value of V.<\/p>\n\n<h3>Input<\/h3>\n<p>The first line contains a single integer T, the number of test cases. T test cases follow. Each testcase consists of a single line consisting of three integers A, E, and V.<\/p>\n\n<h3>Output<\/h3>\n<p>For each test case, output a single line consisting the number of different binary strings satisfying the rule, modulo 1000000007.<\/p>\n\n<h3>Constraints<\/h3>\n<ul>\n<li>1 \u2264 T \u2264 1000<\/li>\n<li>0 \u2264 A \u2264 50<\/li>\n<li>0 \u2264 E \u2264 50<\/li>\n<li>0 \u2264 V \u2264 1000<\/li>\n<\/ul>\n\n<h3>Example<\/h3>\n\n<pre>\n<b>Input:<\/b>\n4\n0 0 0\n1 0 1\n3 2 6\n4 2 8\n\n<b>Output:<\/b>\n1\n1\n3\n4\n<\/pre>\n\n<h3>Explanation<\/h3>\nFor the last test case, the solutions are:\n<ul>\n<li>AAEAAE<\/li>\n<li>AEAAAE<\/li>\n<li>AAEAEA<\/li>\n<li>AEAAEA<\/li>\n<\/ul>    ","languages_supported":"NA","title":"AEHASH","category":"NA","old_version":true,"problem_code":"AEHASH"}