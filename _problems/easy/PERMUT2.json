{"body":"\n<h3> All submissions for this problem are available. <\/h3><p>\nSome programming contest problems are really tricky: not only do they\nrequire a different output format from what you might have expected, but\nalso the sample output does not show the difference. For an example,\nlet us look at permutations.<br \/>\nA <b>permutation<\/b> of the integers <i>1<\/i> to <i>n<\/i> is an\nordering of\nthese integers. So the natural way to represent a permutation is\nto list the integers in this order. With <i>n = 5<\/i>, a\npermutation might look like 2, 3, 4, 5, 1. <br \/>\nHowever, there is another possibility of representing a permutation:\nYou create a list of numbers where the <i>i<\/i>-th number is the\nposition of the integer <i>i<\/i> in the permutation. \nLet us call this second\npossibility an <b>inverse permutation<\/b>. The inverse permutation\nfor the sequence above is 5, 1, 2, 3, 4.\n<br \/>\nAn <b>ambiguous permutation<\/b> is a permutation which cannot be\ndistinguished from its inverse permutation. The permutation 1, 4, 3, 2\nfor example is ambiguous, because its inverse permutation is the same.\nTo get rid of such annoying sample test cases, you have to write a\nprogram which detects if a given permutation is ambiguous or not.\n<\/p>\n<h3>Input Specification<\/h3>\n<p>The input contains several test cases.<br \/>\nThe first line of each test case contains an integer <i>n<\/i>\n(<i>1 &#8804; n &#8804; 100000<\/i>).\nThen a permutation of the integers <i>1<\/i> to <i>n<\/i> follows\nin the next line. There is exactly one space character\nbetween consecutive integers.\nYou can assume that every integer between <i>1<\/i> and <i>n<\/i>\nappears exactly once in the permutation.\n<br \/>\nThe last test case is followed by a zero.\n<\/p>\n<h3>Output Specification<\/h3>\n<p>For each test case output whether the permutation is ambiguous or not.\nAdhere to the format shown in the sample output.\n<\/p>\n<h3>Sample Input<\/h3>\n<pre>4\n1 4 3 2\n5\n2 3 4 5 1\n1\n1\n0\n<\/pre>\n<h3>Sample Output<\/h3>\n<pre>ambiguous\nnot ambiguous\nambiguous\n<\/pre>    ","languages_supported":"NA","title":"PERMUT2","category":"NA","old_version":true,"problem_code":"PERMUT2"}