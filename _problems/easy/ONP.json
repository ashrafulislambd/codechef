{"body":"\n<h3> All submissions for this problem are available. <\/h3>\n<p align=\"justify\"><\/p>\n<p>Reverse Polish Notation (RPN) is a mathematical notation where every operator follows all of its operands. For instance, to add three and four, one would write \"3 4 +\" rather than \"3 + 4\". If there are multiple operations, the operator is given immediately after its second operand; so the expression written \"3 &#8722; 4 + 5\" would be written \"3 4 &#8722; 5 +\" first subtract 4 from 3, then add 5 to that.<\/p>\n<p>\nTransform the algebraic expression with brackets into RPN form.\n<\/p>\n<p>\nYou can assume that for the test cases below only single letters will be used, brackets [] will not be used and each expression has only one RPN form (no expressions like a*b*c)<\/p>\n<h3>Input<\/h3>\n<p align=\"left\">\nThe first line contains t, the number of test cases (less then 100).\n<\/p>\n<p>\nFollowed by t lines, containing an expression to be translated to RPN form, where the length of the expression is less then 400.\n<\/p>\n<h3>Output<\/h3>\n<pre>\nThe <em>expression<\/em>s in RPN form, one per line.\n<\/pre>\n<h3>Example<\/h3>\n\n<pre>\nInput:\n3\n(a+(b*c))\n((a+b)*(z+x))\n((a+t)*((b+(a+c))^(c+d)))\n\nOutput:\nabc*+\nab+zx+*\nat+bac++cd+^*\n<\/pre>    ","languages_supported":"NA","title":"ONP","category":"NA","old_version":true,"problem_code":"ONP"}